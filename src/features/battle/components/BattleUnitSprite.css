.battle-unit {
  width: 70px;
  height: 90px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  transition: transform 0.2s ease-in-out;
  margin: auto; /* 在网格单元格中自动居中 */
  padding: 5px;
  border-radius: 8px;
  background-color: rgba(0, 0, 0, 0.1);
}

.sprite-image {
  image-rendering: -webkit-optimize-contrast;
  image-rendering: crisp-edges;
  image-rendering: pixelated;
  transition: transform 0.2s ease;
  will-change: transform;
  transform-origin: center bottom;
  /* 添加呼吸效果动画 */
  animation: breathing 4s ease-in-out infinite;
}

/* 攻击动画 - 冲向目标版本 */
.attacker-move {
  animation: charge-to-target 1s ease-in-out !important;
  transform-origin: center center !important;
  z-index: 1000 !important;
  position: relative !important;
  will-change: transform !important;
}

@keyframes charge-to-target {
  0% { 
    transform: translateX(0) translateY(0) scale(1); 
    filter: brightness(1);
  }
  10% { 
    transform: translateX(calc(var(--move-x, 0px) * -0.1)) translateY(calc(var(--move-y, 0px) * -0.1)) scale(1.1); 
    filter: brightness(1.05);
  }
  40% { 
    transform: translateX(var(--move-x, 0px)) translateY(var(--move-y, 0px)) scale(1.2); 
    filter: brightness(1.05);
  }
  50% { 
    transform: translateX(var(--move-x, 0px)) translateY(var(--move-y, 0px)) scale(1.1); 
    filter: brightness(1.05);
  }
  100% { 
    transform: translateX(0) translateY(0) scale(1); 
    filter: brightness(1);
  }
}

/* 受伤动画 - 强化后退效果 */
.receiving-damage {
  animation: damage-knockback 0.6s ease-in-out !important;
  transform-origin: center center !important;
  will-change: transform !important;
  z-index: 999 !important;
}



@keyframes damage-knockback {
  0% { 
    transform: translateX(0) translateY(0) scale(1); 
    filter: brightness(1);
  }
  15% { 
    transform: translateX(calc(var(--knockback-x, -1) * 30px)) translateY(calc(var(--knockback-y, 0) * 50px - 15px)) scale(0.85); 
    filter: brightness(1.2) hue-rotate(0deg);
  }
  30% { 
    transform: translateX(calc(var(--knockback-x, -1) * 25px)) translateY(calc(var(--knockback-y, 0) * 45px - 8px)) scale(0.9); 
    filter: brightness(1.1) hue-rotate(15deg);
  }
  45% { 
    transform: translateX(calc(var(--knockback-x, -1) * 20px)) translateY(calc(var(--knockback-y, 0) * 40px - 12px)) scale(1); 
    filter: brightness(1.2) hue-rotate(10deg);
  }
  60% { 
    transform: translateX(calc(var(--knockback-x, -1) * 20px)) translateY(calc(var(--knockback-y, 0) * 30px - 6px)) scale(1); 
    filter: brightness(1.2) hue-rotate(8deg);
  }
  75% { 
    transform: translateX(calc(var(--knockback-x, -1) * 10px)) translateY(calc(var(--knockback-y, 0) * 20px - 4px)) scale(1); 
    filter: brightness(1.1) hue-rotate(5deg);
  }
  85% { 
    transform: translateX(calc(var(--knockback-x, -1) * 5px)) translateY(calc(var(--knockback-y, 0) * 10px - 2px)) scale(1); 
    filter: brightness(1.1) hue-rotate(2deg);
  }
  100% { 
    transform: translateX(0) translateY(0) scale(1); 
    filter: brightness(1) hue-rotate(0deg);
  }
}



/* 伤害数字 */
.damage-number-container {
  position: absolute;
  top: -30px;
  left: 50%;
  transform: translateX(-50%);
  z-index: 100;
  pointer-events: none;
}

.damage-number {
  color: #ff4444;
  font-size: 26px;
  font-weight: bold;

  animation: float-damage-enhanced 1.8s ease-out forwards;
}

.damage-number.critical {
  color: #ffdd00;
  font-size: 32px;
  font-weight: bold;
  animation: float-damage-critical 1.8s ease-out forwards;
}

.damage-number.heal {
  color: #44ff44;
  font-size: 24px;
  font-weight: bold;
  animation: float-heal 1.8s ease-out forwards;
}

.damage-number.miss {
  color: #9e9e9e;
  font-size: 20px;
  font-style: italic;
  animation: float-miss 1.5s ease-out forwards;
}

.critical-text {
  font-size: 14px;
  color: #ffdd00;
  font-weight: bold;

  animation: critical-flash 0.4s ease-out;
  margin-bottom: -2px;
}

.damage-value {
  font-size: inherit;
  font-weight: inherit;
  color: inherit;
  text-shadow: inherit;
  background: inherit;
  -webkit-background-clip: inherit;
  background-clip: inherit;
  -webkit-text-fill-color: inherit;
}

@keyframes critical-flash {
  0% { opacity: 0; transform: scale(0.8); }
  50% { opacity: 1; transform: scale(1.2); }
  100% { opacity: 1; transform: scale(1); }
}

/* 防御状态样式 */
.defending {
  position: relative;
}

.defending::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 2px solid #3498db;
  border-radius: 50%;
  box-shadow: 0 0 10px #3498db, inset 0 0 10px #3498db;
  opacity: 0.5;
  animation: defend-pulse 2s infinite;
  z-index: 5;
  pointer-events: none;
}

@keyframes defend-pulse {
  0% { transform: scale(0.95); opacity: 0.5; }
  50% { transform: scale(1.05); opacity: 0.7; }
  100% { transform: scale(0.95); opacity: 0.5; }
}

/* 防御特效容器 */
.defend-effect-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 95;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: visible;
}

/* 防御盾牌特效 */
.defend-effect {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 100;
}

.defend-effect i {
  font-size: 40px;
  color: #3498db;
  text-shadow: 0 0 10px #3498db, 0 0 20px #3498db;
  animation: shield-pulse 2s infinite;
}

@keyframes shield-pulse {
  0% { transform: scale(0.9); opacity: 0.7; }
  50% { transform: scale(1.1); opacity: 1; }
  100% { transform: scale(0.9); opacity: 0.7; }
}

@keyframes float-damage-enhanced {
  0% { 
    transform: translateY(0) scale(0.8); 
    opacity: 0; 
  }
  20% { 
    transform: translateY(-12px) scale(1.1); 
    opacity: 1; 
  }
  80% { 
    transform: translateY(-30px) scale(1); 
    opacity: 1; 
  }
  100% { 
    transform: translateY(-45px) scale(0.9); 
    opacity: 0; 
  }
}

@keyframes float-damage-critical {
  0% { 
    transform: translateY(0) scale(0.6); 
    opacity: 0; 
  }
  15% { 
    transform: translateY(-8px) scale(1.2); 
    opacity: 1; 
  }
  30% { 
    transform: translateY(-18px) scale(1.1); 
    opacity: 1; 
  }
  80% { 
    transform: translateY(-40px) scale(1); 
    opacity: 0.8; 
  }
  100% { 
    transform: translateY(-55px) scale(0.9); 
    opacity: 0; 
  }
}

@keyframes float-heal {
  0% { 
    transform: translateY(0) scale(0.6) rotate(5deg); 
    opacity: 0; 
  }
  20% { 
    transform: translateY(-12px) scale(1.2) rotate(-2deg); 
    opacity: 1; 
  }
  40% { 
    transform: translateY(-22px) scale(1.1) rotate(1deg); 
    opacity: 1; 
  }
  75% { 
    transform: translateY(-35px) scale(1) rotate(0deg); 
    opacity: 0.8; 
  }
  100% { 
    transform: translateY(-50px) scale(0.9) rotate(-1deg); 
    opacity: 0; 
  }
}

@keyframes float-miss {
  0% { 
    transform: translateY(0) scale(0.8) rotate(-3deg); 
    opacity: 0; 
  }
  25% { 
    transform: translateY(-8px) scale(1.1) rotate(2deg); 
    opacity: 0.7; 
  }
  60% { 
    transform: translateY(-15px) scale(1) rotate(-1deg); 
    opacity: 0.5; 
  }
  100% { 
    transform: translateY(-25px) scale(0.9) rotate(0deg); 
    opacity: 0; 
  }
}

@keyframes float-damage {
  0% { transform: translateY(0) scale(0.8); opacity: 0; }
  20% { transform: translateY(-10px) scale(1.2); opacity: 1; }
  80% { transform: translateY(-25px) scale(1); opacity: 1; }
  100% { transform: translateY(-35px) scale(0.9); opacity: 0; }
}

/* 攻击特效容器 */
.attack-effect-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 90;
  overflow: visible;
}

/* 攻击波纹特效 - 优化版本 */
.attack-effect {
  position: absolute;
  top: -15%;
  left: -15%;
  width: 130%;
  height: 130%;
  background: radial-gradient(circle, rgba(255,255,255,0.9) 0%, rgba(255,0,0,0.3) 40%, rgba(255,255,255,0) 70%);
  animation: attack-pulse 0.4s ease-out;
  border-radius: 50%;
  mix-blend-mode: screen;
  will-change: opacity, transform;
  pointer-events: none;
}

@keyframes attack-pulse {
  0% { opacity: 0.9; transform: scale(0.8); }
  50% { opacity: 0.7; transform: scale(1.1); }
  100% { opacity: 0; transform: scale(1.2); }
}

/* 呼吸效果动画 */
@keyframes breathing {
  0%, 100% {
    transform: scale(1) translateZ(20px) scaleX(var(--sprite-direction, -1));
  }
  50% {
    transform: scale(1.03) translateZ(20px) scaleX(var(--sprite-direction, -1));
  }
}

/* BUFF图标样式 */
.buff-container {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 2px;
  padding: 2px;
  background-color: rgba(0, 0, 0, 0.3);
  border-radius: 4px;
}

.buff-icon {
  box-shadow: 0 0 3px rgba(0, 0, 0, 0.5);
  transition: transform 0.2s ease;
  cursor: help;
  position: relative;
}

.buff-icon:hover {
  transform: scale(1.2);
  z-index: 100;
}

/* 正面BUFF的脉动效果 */
.buff-icon.positive-buff {
  animation: positive-buff-pulse 2s infinite;
}

@keyframes positive-buff-pulse {
  0%, 100% { box-shadow: 0 0 3px rgba(72, 199, 116, 0.5); }
  50% { box-shadow: 0 0 8px rgba(72, 199, 116, 0.8); }
}

/* 负面BUFF的脉动效果 */
.buff-icon.negative-buff {
  animation: negative-buff-pulse 2s infinite;
}

@keyframes negative-buff-pulse {
  0%, 100% { box-shadow: 0 0 3px rgba(231, 76, 60, 0.5); }
  50% { box-shadow: 0 0 8px rgba(231, 76, 60, 0.8); }
}

/* 永久BUFF的闪光效果 */
.buff-icon.permanent-buff {
  animation: permanent-buff-glow 3s infinite;
}

@keyframes permanent-buff-glow {
  0%, 100% { border-color: rgba(241, 196, 15, 0.6); }
  50% { border-color: rgba(241, 196, 15, 1); }
}

/* 轻微摇摆效果 */
@keyframes idle-sway {
  0%, 100% {
    transform: rotateX(0deg);
  }
  25% {
    transform: rotateX(1deg);
  }
  75% {
    transform: rotateX(-1deg);
  }
}

/* 鼠标悬停时的交互效果 */
.sprite-container:hover {
  transform: translateY(-5px);
}

.sprite-container:hover .sprite-image {
  animation-play-state: paused;
  transform: scale(1.05) translateZ(30px) scaleX(var(--sprite-direction, -1));
  filter: drop-shadow(0 15px 10px rgba(0, 0, 0, 0.4));
}

/* 添加精灵图阴影效果 */
.sprite-shadow {
  position: absolute;
  bottom: -10px;
  left: 50%;
  transform: translateX(-50%);
  width: 70%;
  height: 10px;
  background: rgba(0, 0, 0, 0.2);
  border-radius: 50%;
  filter: blur(5px);
  transition: all 0.3s ease;
}

.sprite-container:hover .sprite-shadow {
  width: 75%;
  opacity: 0.3;
  filter: blur(7px);
}

@keyframes flash-pulse {
  0% { opacity: 0.8; }
  100% { opacity: 0; }
}

.battle-unit:hover {
  transform: scale(1.1);
  cursor: pointer;
}

.sprite-container {
  position: relative;
  transform-style: preserve-3d;
  z-index: 100 !important; /* 确保精灵容器始终在最上层 */
  perspective: 1000px; /* 添加3D视角 */
  transition: transform 0.3s ease;
  /* 添加轻微摇摆效果 */
  animation: idle-sway 6s ease-in-out infinite;
}

.sprite-container::after {
  content: '';
  position: absolute;
  bottom: -5px;
  left: 50%;
  transform: translateX(-50%);
  width: 80px;
  height: 15px;
  background: radial-gradient(ellipse at center, rgba(0,0,0,0.4) 0%, rgba(0,0,0,0) 70%);
  border-radius: 50%;
  z-index: 0;
  filter: blur(1px);
}

.unit-circle {
  width: 50px;
  height: 50px;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
  margin-bottom: 8px;
}

.player-unit .unit-circle {
  background-color: #3498db;
  border: 2px solid #2980b9;
}

.enemy-unit .unit-circle {
  background-color: #e74c3c;
  border: 2px solid #c0392b;
}

.defeated-unit {
  opacity: 0.5;
}

.defeated-unit .unit-circle {
  background-color: #7f8c8d;
  border-color: #2c3e50;
}

.defeated-x {
  position: absolute;
  width: 100%;
  height: 100%;
}

.defeated-x:before,
.defeated-x:after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 70%;
  height: 3px;
  background-color: #e74c3c;
}

.defeated-x:before {
  transform: translate(-50%, -50%) rotate(45deg);
}

.defeated-x:after {
  transform: translate(-50%, -50%) rotate(-45deg);
}

.unit-info {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 5px;
  width: 100%;
}

.status-bars {
  display: flex;
  flex-direction: column;
  gap: 4px;
  width: 100%;
  align-items: center;
  margin-top: 2px;
}

.unit-name {
  font-size: 12px;
  font-weight: bold;
  color: white;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 80px;
  text-align: center;
  margin-bottom: 4px;
  background-color: rgba(0, 0, 0, 0.3);
  padding: 2px 6px;
  border-radius: 4px;
}

.hp-bar-container, .mp-bar-container {
  width: 60px;
  height: 8px;
  background-color: rgba(0, 0, 0, 0.5);
  border-radius: 4px;
  margin-top: 2px;
  overflow: hidden;
  position: relative;
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.3);
}

.hp-bar-fill, .mp-bar-fill {
  height: 100%;
  transition: width 0.3s ease-out, background-color 0.3s ease-out;
  background-image: linear-gradient(to right, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0.3));
}

.bar-text {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 8px;
  font-weight: bold;
  color: white;
  text-shadow: 0px 0px 2px rgba(0, 0, 0, 1), 0px 0px 3px rgba(0, 0, 0, 0.8);
  white-space: nowrap;
  letter-spacing: 0.5px;
}

.defeated-text {
  color: #e74c3c;
  font-size: 12px;
  font-weight: bold;
  margin-top: 5px;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);
}
